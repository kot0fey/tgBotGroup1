import random
import telebot
from telebot import types
import requests
from googletrans import Translator

TOKEN = '6340850754:AAHSk0R4RTBJM2Wh4tnCAIcJ_7Fy5ksvkwA'
bot = telebot.TeleBot(TOKEN)
WEATHER_API_KEY = '1ce32dd7ed35e3bde9621673dccc4c4f'
URL = 'https://api.telegram.org/bot'

keyboard = types.ReplyKeyboardMarkup(row_width=2)
translate_button = types.KeyboardButton('üàØ–ü–µ—Ä–µ–≤–µ—Å—Ç–∏')
weather_button = types.KeyboardButton('üå§–ü–æ–≥–æ–¥–∞')
calculator_button = types.KeyboardButton('üßÆ–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä')
mems_button = types.KeyboardButton('ü§£IT –º–µ–º—ã')
keyboard.add(translate_button, weather_button, calculator_button, mems_button)
translator = Translator(service_urls=['translate.google.com'])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id,
                     f'<b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!</b> \n –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é –≤–∞–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ '
                     f'Telegram-–±–æ—Ç–∞ <b>NonchBot</b>, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã—Ö '
                     f'—Ñ—É–Ω–∫—Ü–∏–π:\n1)<em>–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫</em>: –ë–æ—Ç –º–æ–∂–µ—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π. –ü—Ä–æ—Å—Ç–æ '
                     f'–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –∏ –æ–Ω –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –≤–µ—Ä–Ω–µ—Ç –≤–∞–º –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ '
                     f'—Ä—É—Å—Å–∫–∏–π.\n2)<em>–ü–æ–≥–æ–¥–∞</em>: –ë–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ. –ü—Ä–æ—Å—Ç–æ '
                     f'—É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∏ –±–æ—Ç –≤–µ—Ä–Ω–µ—Ç —Ç–µ–∫—É—â—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É, –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ '
                     f'–±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏.\n3)<em>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</em>: –ë–æ—Ç –∏–º–µ–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '
                     f'—Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–º—É –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –∏ –±–æ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–µ—Ç '
                     f'—Ä–µ–∑—É–ª—å—Ç–∞—Ç.\n4)<em>IT-–º–µ–º—ã</em>: –î–ª—è –ø–æ–¥–Ω—è—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, –±–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –º–µ–º—ã –Ω–∞ —Ç–µ–º—É '
                     f'IT. –ü–æ–ª—É—á–∏—Ç–µ –ø–æ—Ä—Ü–∏—é —é–º–æ—Ä–∞ –∏ –æ—Ç–¥–æ—Ö–Ω–∏—Ç–µ –æ—Ç —Ä–∞–±–æ—Ç—ã –∏–ª–∏ —É—á–µ–±—ã.\n<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –ø–∞–Ω–µ–ª–∏ '
                     f'–∫–æ–º–∞–Ω–¥</b>',
                     parse_mode='HTML', reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info
@bot.message_handler(commands=['info'])
def info(message):
    bot.send_message(message.chat.id,
                     '<b>–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ Nonch Inc.</b>\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏:\n<b>–ü—Ä—É—Ü –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω –ê–Ω–¥—Ä–µ–µ–≤–∏—á –∏ –°–æ–∫–æ–ª–æ–≤ '
                     '–ù–∏–∫–∏—Ç–∞ –í–∞–ª–µ—Ä—å–µ–≤–∏—á</b>\n–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ 2023 ',
                     parse_mode='HTML')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
def show_buttons(message):
    bot.send_chat_action(message.chat.id, 'typing')
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –ø–∞–Ω–µ–ª–∏ –∫–æ–º–∞–Ω–¥", reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–ü–µ—Ä–µ–≤–µ—Å—Ç–∏"
@bot.message_handler(func=lambda message: message.text == 'üàØ–ü–µ—Ä–µ–≤–µ—Å—Ç–∏')
def translate_text(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏:', reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, process_translation)


def process_translation(message):
    if message.text:
        text_to_translate = message.text
        translation = translator.translate(text_to_translate, dest='ru')
        bot.send_message(message.chat.id, f'–ü–µ—Ä–µ–≤–æ–¥:\n{translation.text}')
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.')
    show_buttons(message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–ü–æ–≥–æ–¥–∞"
@bot.message_handler(func=lambda message: message.text == 'üå§–ü–æ–≥–æ–¥–∞')
def handle_weather(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:', reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, get_weather)


def get_weather(message):
    city = message.text.strip()
    weather_data = fetch_weather(city)

    if weather_data:
        temperature = weather_data['main']['temp']
        pressure = weather_data['main']['pressure']
        wind_speed = weather_data['wind']['speed']
        weather_status = translator.translate(weather_data['weather'][0]['description'], src='en', dest='ru').text
        response = f"–ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
        response += f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature} ¬∞C\n"
        response += f"–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} hPa\n"
        response += f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å\n"
        response += f"–°—Ç–∞—Ç—É—Å: {weather_status}\n"
    else:
        response = "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω."

    bot.send_message(message.chat.id, response)
    show_buttons(message)


def fetch_weather(city):
    try:
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric"
        response = requests.get(url)
        weather_data = response.json()
        if weather_data["cod"] != "404":
            return weather_data
    except:
        pass
    return None


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
@bot.message_handler(func=lambda message: message.text == 'üßÆ–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä')
def handle_calculator(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ:', reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, calculate_expression)


def calculate_expression(message):
    expression = message.text
    try:
        result = eval(expression)
        if isinstance(result, (int, float)) and result == float('inf'):
            raise ZeroDivisionError('–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å')
        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}')
        show_buttons(message)
    except ZeroDivisionError:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞: –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å')
        show_buttons(message)
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è')
        show_buttons(message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "ü§£IT –º–µ–º—ã"
@bot.message_handler(func=lambda message: message.text == 'ü§£IT –º–µ–º—ã')
def send_meme(message):
    public = random.randint(100, 303)
    chat_id = message.chat.id
    img_url = f'https://t.me/itshnik_mem/{public}'
    request_url = f'{URL}{TOKEN}/sendPhoto?chat_id={chat_id}&photo={img_url}'
    response = requests.get(request_url)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(func=lambda message: True)
def handle_unknown_command(message):
    bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
